{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeypress","event","setState","document","addEventListener","this","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,MAFT,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,kBAN5C,kCASE,WACEG,SAASC,iBAAiB,QAASC,KAAKL,kBAV5C,oBAiBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIP,EAAG,mCAC6BA,EAD7B,KAEC,kCA1BhB,GAAyBQ,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.3894531d.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  key: string | null;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    key: null,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeypress);\n  }\n\n  componentWillUnmount(): void {\n    document.addEventListener('keyup', this.handleKeypress);\n  }\n\n  handleKeypress = (event: KeyboardEvent): void => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            key\n              ? `The last pressed key is [${key}]`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}